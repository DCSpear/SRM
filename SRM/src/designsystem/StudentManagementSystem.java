/**
 * @author Software Design Group 1
 * ALLEN VAN DIEMAN
 * ANTHONY NDUBUISI JUNIOR JOSEPH
 */

package designsystem;

//Import formatting and MySQL Libraries
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;
import java.util.Vector;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;

public class StudentManagementSystem extends javax.swing.JFrame {
    //instance variables that hold database login information
    private static final String username = "<database username>";
    private static final String password = "<database password>";
    private static final String database = "jdbc:mysql://<database ip>:3306/<DATABASE>";
    
    //instance variables for database use
    Connection sqlConn = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    int SelectedRows = -1; //-1 for nothing selected
    int rowCount = 0;
    
    //update database function (same as login and subject marks page)
    private void upDateDB(){
	try
	{
		Class.forName("com.mysql.cj.jdbc.Driver");
		sqlConn = DriverManager.getConnection(database,username,password);
		pst = sqlConn.prepareStatement("select * from StudentData");

		rs = pst.executeQuery();
		ResultSetMetaData stData = rs.getMetaData();

		int colCount = stData.getColumnCount();

		DefaultTableModel RecordTable = (DefaultTableModel)jTable.getModel();
		RecordTable.setRowCount(0);

		while(rs.next())
		{
			Vector columnData = new Vector();

			for(int i = 1; i <= colCount; i++)
			{
				columnData.add(rs.getString("StudentNumber")); //depends on colum count
				columnData.add(rs.getString("name")); //depends on colum count
				columnData.add(rs.getString("surname")); //depends on colum count
                                columnData.add(rs.getString("course")); //depends on colum count
                                columnData.add(rs.getString("Department")); //depends on colum count
                                columnData.add(rs.getString("Gender")); //depends on colum count
                                columnData.add(rs.getString("DoB")); //depends on colum count
                                columnData.add(rs.getString("Contact")); //depends on colum count
                                columnData.add(rs.getString("Email")); //depends on colum count
                                columnData.add(rs.getString("Address")); //depends on colum count
			}
			RecordTable.addRow(columnData);

		}
                rowCount = jTable.getRowCount();
	}
	catch(ClassNotFoundException | SQLException ex)
	{
		JOptionPane.showMessageDialog(null, ex);
	}
}
   
    //constructor check what access level is and set page accordingly
    public StudentManagementSystem(int accessLevel) {
        initComponents();
         
        Image img=new ImageIcon(this.getClass().getResource("/CPUT icon.jpg")).getImage();
        this.setIconImage(img);
        
        //disable buttons if not admin
        if(accessLevel == 1)
        {
            jBInsert.setEnabled(false);
            jBDelete.setEnabled(false);
            jBViewData.setEnabled(false);
            jBUpdate.setEnabled(false);
        }
        
        upDateDB();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTFStudentNumber = new javax.swing.JTextField();
        jTFSurname = new javax.swing.JTextField();
        jTFFirstName = new javax.swing.JTextField();
        jTFCourse = new javax.swing.JTextField();
        jTFGender = new javax.swing.JTextField();
        jTFDepartment = new javax.swing.JTextField();
        jTFDOB = new javax.swing.JTextField();
        jTFEmail = new javax.swing.JTextField();
        jTFContact = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jTFAddress = new javax.swing.JTextField();
        jBInsert = new javax.swing.JButton();
        jBViewData = new javax.swing.JButton();
        jBClear = new javax.swing.JButton();
        jBExit = new javax.swing.JButton();
        jBUpdate = new javax.swing.JButton();
        jBDelete = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 3, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("       Student Record Management System");
        jLabel2.setToolTipText("");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(106, 24, 799, 50));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Student Number");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 128, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("First Name");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 168, 87, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Surname");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 208, 87, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Course");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 249, 87, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Department");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 289, 87, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Gender");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 330, 87, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Date of Birth");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 370, 87, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Contact No.");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 411, 87, -1));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Email");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 451, 87, -1));

        jTFStudentNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFStudentNumberKeyReleased(evt);
            }
        });
        getContentPane().add(jTFStudentNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(149, 125, 150, -1));

        jTFSurname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFSurnameKeyReleased(evt);
            }
        });
        getContentPane().add(jTFSurname, new org.netbeans.lib.awtextra.AbsoluteConstraints(149, 205, 150, -1));

        jTFFirstName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFFirstNameKeyReleased(evt);
            }
        });
        getContentPane().add(jTFFirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(149, 165, 150, -1));

        jTFCourse.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFCourseKeyReleased(evt);
            }
        });
        getContentPane().add(jTFCourse, new org.netbeans.lib.awtextra.AbsoluteConstraints(149, 246, 150, -1));

        jTFGender.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFGenderKeyReleased(evt);
            }
        });
        getContentPane().add(jTFGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(149, 327, 150, -1));

        jTFDepartment.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFDepartmentKeyReleased(evt);
            }
        });
        getContentPane().add(jTFDepartment, new org.netbeans.lib.awtextra.AbsoluteConstraints(149, 286, 150, -1));
        getContentPane().add(jTFDOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(149, 367, 150, -1));
        getContentPane().add(jTFEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(149, 448, 150, -1));
        getContentPane().add(jTFContact, new org.netbeans.lib.awtextra.AbsoluteConstraints(149, 408, 150, -1));

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Student Number", "First Name", "Surname", "Course", "Department", "Gender", "DoB", "Contact No.", "Email", "Address"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(491, 125, 500, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Address");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 489, 50, -1));
        getContentPane().add(jTFAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(149, 489, 150, 65));

        jBInsert.setText("Insert");
        jBInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBInsertActionPerformed(evt);
            }
        });
        getContentPane().add(jBInsert, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 180, 84, -1));

        jBViewData.setText("View Data");
        jBViewData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBViewDataActionPerformed(evt);
            }
        });
        getContentPane().add(jBViewData, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 230, -1, -1));

        jBClear.setText("Clear");
        jBClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBClearActionPerformed(evt);
            }
        });
        getContentPane().add(jBClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 380, 84, -1));

        jBExit.setText("Exit");
        jBExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExitActionPerformed(evt);
            }
        });
        getContentPane().add(jBExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 450, 84, -1));

        jBUpdate.setText("Update");
        jBUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(jBUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 280, 84, -1));

        jBDelete.setText("Delete");
        jBDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(jBDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 330, 84, -1));
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jButton1.setText("<<Login Page");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/wp4088642.jpg"))); // NOI18N
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1020, 600));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jBExitActionPerformed

    private void jBViewDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBViewDataActionPerformed
       
        ///  check if number exist and make new table for new record on marks table   
        
        //search for student number uniqueness
        String sNum     = jTFStudentNumber.getText();
        Boolean found = false;
        for(int i = 0 ; i < rowCount ; i++)
        {
            if(sNum == null ? jTable.getModel().getValueAt(i, 0).toString() == null : sNum.equals(jTable.getModel().getValueAt(i, 0).toString()))
            {
                found = true;
            }
        }
        
        //student number cant be blank or already used otherwise view marks and pass name and studnet nr
        if(sNum.isBlank() || !found)
        {
            JOptionPane.showMessageDialog(this, "Please select a Student record!","Error",JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            String sNumber = jTFStudentNumber.getText();
            String sName = jTFFirstName.getText() + " " + jTFSurname.getText();
            SubjectMarks sm = new SubjectMarks(sNumber , sName);
            sm.setLocationRelativeTo(null);
            sm.setVisible(true);
            this.dispose();
        }
        
    }//GEN-LAST:event_jBViewDataActionPerformed

    private void jBInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBInsertActionPerformed
        //load textboxes to variables
        String sNum     = jTFStudentNumber.getText();
        String sName    = jTFFirstName.getText();
        String sSurname = jTFSurname.getText();
        String sCourse  = jTFCourse.getText();
        String sDep     = jTFDepartment.getText();
        String sGen     = jTFGender.getText();
        String sDoB     = jTFDOB.getText();
        String sCon     = jTFContact.getText();
        String sEmail   = jTFEmail.getText();
        String sAddress = jTFAddress.getText();
         
        //search for student number uniqueness
        Boolean found = false;
        for(int i = 0 ; i < rowCount ; i++)
        {
            if(sNum == null ? jTable.getModel().getValueAt(i, 0).toString() == null : sNum.equals(jTable.getModel().getValueAt(i, 0).toString()))
            {
                found = true;
            }
        }
        
        //check if blank of found student nr else insert record to table
        if(sNum.isBlank())
        {
            JOptionPane.showMessageDialog(this, "New Student numbers cant be blank!","Error",JOptionPane.WARNING_MESSAGE);
        }
        else if(found)
        {
            JOptionPane.showMessageDialog(this, "New Student numbers must be unique!","Error",JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            try
	{
		Class.forName("com.mysql.cj.jdbc.Driver");
		sqlConn = DriverManager.getConnection(database,username,password);
                //insert into studentdata table
		pst = sqlConn.prepareStatement("INSERT into StudentData(StudentNumber, name, surname, course,"
                        + "Department, Gender, DoB, Contact, Email, Address)value(?,?,?,?,?,?,?,?,?,?)");
                pst.setString(1, sNum);
                pst.setString(2, sName);
                pst.setString(3, sSurname);
                pst.setString(4, sCourse);
                pst.setString(5, sDep);
                pst.setString(6, sGen);
                pst.setString(7, sDoB);
                pst.setString(8, sCon);
                pst.setString(9, sEmail);
                pst.setString(10, sAddress);
		pst.executeUpdate();
                
                //insert into marks table
                pst = sqlConn.prepareStatement("INSERT into marks(studentNr, M1, P1, S1, E1,"
                        + "M2, P2, S2, E2)value(?,?,?,?,?,?,?,?,?)");
                pst.setString(1, sNum);
                pst.setString(2, "0");
                pst.setString(3, "0");
                pst.setString(4, "0");
                pst.setString(5, "0");
                pst.setString(6, "0");
                pst.setString(7, "0");
                pst.setString(8, "0");
                pst.setString(9, "0");
		pst.executeUpdate();
                
                upDateDB();
	}
        catch(ClassNotFoundException | SQLException ex)
	{
		JOptionPane.showMessageDialog(null, ex);
	}
            
        }
           
    }//GEN-LAST:event_jBInsertActionPerformed

    //the below function listens for keypresses and searches table
    private void jTFStudentNumberKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFStudentNumberKeyReleased
       DefaultTableModel ob=(DefaultTableModel) jTable.getModel();
       
       TableRowSorter <DefaultTableModel> obj =new TableRowSorter<>(ob);
       jTable.setRowSorter(obj);
       obj.setRowFilter(RowFilter.regexFilter( jTFStudentNumber.getText()));
    }//GEN-LAST:event_jTFStudentNumberKeyReleased

    private void jTFFirstNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFFirstNameKeyReleased
       DefaultTableModel ob=(DefaultTableModel) jTable.getModel();
       
       TableRowSorter <DefaultTableModel> obj =new TableRowSorter<>(ob);
       jTable.setRowSorter(obj);
       obj.setRowFilter(RowFilter.regexFilter( jTFFirstName.getText()));
    }//GEN-LAST:event_jTFFirstNameKeyReleased

    private void jTFSurnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFSurnameKeyReleased
        DefaultTableModel ob=(DefaultTableModel) jTable.getModel();
       
       TableRowSorter <DefaultTableModel> obj =new TableRowSorter<>(ob);
       jTable.setRowSorter(obj);
       obj.setRowFilter(RowFilter.regexFilter( jTFSurname.getText()));
    }//GEN-LAST:event_jTFSurnameKeyReleased

    private void jTFCourseKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFCourseKeyReleased
       DefaultTableModel ob=(DefaultTableModel) jTable.getModel();
       
       TableRowSorter <DefaultTableModel> obj =new TableRowSorter<>(ob);
       jTable.setRowSorter(obj);
       obj.setRowFilter(RowFilter.regexFilter( jTFCourse.getText()));
    }//GEN-LAST:event_jTFCourseKeyReleased

    private void jTFGenderKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFGenderKeyReleased
      DefaultTableModel ob=(DefaultTableModel) jTable.getModel();
       
       TableRowSorter <DefaultTableModel> obj =new TableRowSorter<>(ob);
       jTable.setRowSorter(obj);
       obj.setRowFilter(RowFilter.regexFilter( jTFGender.getText()));
    }//GEN-LAST:event_jTFGenderKeyReleased

    private void jTFDepartmentKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFDepartmentKeyReleased
       DefaultTableModel ob=(DefaultTableModel) jTable.getModel();
       
       TableRowSorter <DefaultTableModel> obj =new TableRowSorter<>(ob);
       jTable.setRowSorter(obj);
       obj.setRowFilter(RowFilter.regexFilter( jTFDepartment.getText()));
    }//GEN-LAST:event_jTFDepartmentKeyReleased

    private void jTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMouseClicked
        DefaultTableModel RecordTable = (DefaultTableModel)jTable.getModel();
	SelectedRows = jTable.getSelectedRow();
        
        //if table is clicked load records to text boxes
        jTFStudentNumber.setText(RecordTable.getValueAt(SelectedRows, 0).toString());
        jTFFirstName.setText(RecordTable.getValueAt(SelectedRows, 1).toString());
        jTFSurname.setText(RecordTable.getValueAt(SelectedRows, 2).toString());
        jTFCourse.setText(RecordTable.getValueAt(SelectedRows, 3).toString());
        jTFDepartment.setText(RecordTable.getValueAt(SelectedRows, 4).toString());
        jTFGender.setText(RecordTable.getValueAt(SelectedRows, 5).toString());
        jTFDOB.setText(RecordTable.getValueAt(SelectedRows, 6).toString());
        jTFContact.setText(RecordTable.getValueAt(SelectedRows, 7).toString());
        jTFEmail.setText(RecordTable.getValueAt(SelectedRows, 8).toString());
        jTFAddress.setText(RecordTable.getValueAt(SelectedRows, 9).toString());
        jTFStudentNumber.setEditable(false);
        
    }//GEN-LAST:event_jTableMouseClicked

    private void jBUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBUpdateActionPerformed
        //set textboxes to variables
        String sNum     = jTFStudentNumber.getText();
        String sName    = jTFFirstName.getText();
        String sSurname = jTFSurname.getText();
        String sCourse  = jTFCourse.getText();
        String sDep     = jTFDepartment.getText();
        String sGen     = jTFGender.getText();
        String sDoB     = jTFDOB.getText();
        String sCon     = jTFContact.getText();
        String sEmail   = jTFEmail.getText();
        String sAddress = jTFAddress.getText();
        
        //if no row selected give an error otherwise update database with new records
        if(SelectedRows == -1)
        {
            JOptionPane.showMessageDialog(this, "Please select a row to edit");
        }
        else
        {
            try
	{
		Class.forName("com.mysql.cj.jdbc.Driver");
		sqlConn = DriverManager.getConnection(database,username,password);
		pst = sqlConn.prepareStatement("UPDATE StudentData SET StudentNumber = ?, name = ?, surname = ?, course = ?,"
                        + "Department = ? , Gender = ? , DoB = ? , Contact = ? , Email = ? , Address = ? where StudentNumber = ?");
                pst.setString(1, sNum);
                pst.setString(2, sName);
                pst.setString(3, sSurname);
                pst.setString(4, sCourse);
                pst.setString(5, sDep);
                pst.setString(6, sGen);
                pst.setString(7, sDoB);
                pst.setString(8, sCon);
                pst.setString(9, sEmail);
                pst.setString(10, sAddress);
                pst.setString(11, sNum );
		pst.executeUpdate();
                
                upDateDB();
	}
        catch(ClassNotFoundException | SQLException ex)
	{
		JOptionPane.showMessageDialog(null, ex);
	}
     
    }//GEN-LAST:event_jBUpdateActionPerformed
}
    private void jBClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBClearActionPerformed
        
        //clear textboxes and update table
        jTFStudentNumber.setText("");
        jTFFirstName.setText("");
        jTFSurname.setText("");
        jTFCourse.setText("");
        jTFDepartment.setText("");
        jTFGender.setText("");
        jTFDOB.setText("");
        jTFContact.setText("");
        jTFEmail.setText("");
        jTFAddress.setText("");
        jTFStudentNumber.setEditable(true);
        
       DefaultTableModel ob=(DefaultTableModel) jTable.getModel();
       TableRowSorter <DefaultTableModel> obj =new TableRowSorter<>(ob);
       jTable.setRowSorter(obj);
       obj.setRowFilter(RowFilter.regexFilter( jTFStudentNumber.getText()));
        
       SelectedRows = -1;
    }//GEN-LAST:event_jBClearActionPerformed

    private void jBDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDeleteActionPerformed
        //get student number of record to delete
        String sNum = jTFStudentNumber.getText();
        int deleteItem;
        
        /* check if a row is selected then
         * ask for confirmation then
         * delete selected record using student number as a guide
        */ 
        if(SelectedRows==-1)
        {
            JOptionPane.showMessageDialog(this, "Please select a row to delete!");
        }
        else
        {
            try
	{
            deleteItem = JOptionPane.showConfirmDialog(null, "Confirm to delete record!","Warning",JOptionPane.YES_NO_OPTION);
            
            if(deleteItem==JOptionPane.YES_OPTION)
            {
                Class.forName("com.mysql.cj.jdbc.Driver");
		sqlConn = DriverManager.getConnection(database,username,password);
		pst = sqlConn.prepareStatement("DELETE from StudentData where StudentNumber = ?");
                pst.setString(1, sNum);
                pst.executeUpdate();
                
                pst = sqlConn.prepareStatement("DELETE from marks where studentNr = ?");
                pst.setString(1, sNum);
                pst.executeUpdate();
                
                upDateDB();
                
                //blank everything
                jTFStudentNumber.setText("");
                jTFFirstName.setText("");
                jTFSurname.setText("");
                jTFCourse.setText("");
                jTFDepartment.setText("");
                jTFGender.setText("");
                jTFDOB.setText("");
                jTFContact.setText("");
                jTFEmail.setText("");
                jTFAddress.setText("");
                jTFStudentNumber.setEditable(true);
                
                SelectedRows = -1;
                
            }
    
	}
        catch(ClassNotFoundException | SQLException ex)
	{
		JOptionPane.showMessageDialog(null, ex);
	}
        }
        
        
    }//GEN-LAST:event_jBDeleteActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //go back to login page
        Login lg=new Login();
        lg.setLocationRelativeTo(null);
        lg.setVisible(true);
        this.dispose();
         
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentManagementSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentManagementSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentManagementSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentManagementSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            //new StudentManagementSystem().setVisible(true);  /comneback
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBClear;
    private javax.swing.JButton jBDelete;
    private javax.swing.JButton jBExit;
    private javax.swing.JButton jBInsert;
    private javax.swing.JButton jBUpdate;
    private javax.swing.JButton jBViewData;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTFAddress;
    private javax.swing.JTextField jTFContact;
    private javax.swing.JTextField jTFCourse;
    private javax.swing.JTextField jTFDOB;
    private javax.swing.JTextField jTFDepartment;
    private javax.swing.JTextField jTFEmail;
    private javax.swing.JTextField jTFFirstName;
    private javax.swing.JTextField jTFGender;
    private javax.swing.JTextField jTFStudentNumber;
    private javax.swing.JTextField jTFSurname;
    private javax.swing.JTable jTable;
    // End of variables declaration//GEN-END:variables
}
